{
  "manifest": {
    "name": "hexoid",
    "version": "1.0.0",
    "repository": {
      "type": "git",
      "url": "https://github.com/lukeed/hexoid.git"
    },
    "description": "A tiny (190B) and extremely fast utility to generate random IDs of fixed length",
    "unpkg": "dist/index.min.js",
    "module": "dist/index.mjs",
    "main": "dist/index.js",
    "types": "hexoid.d.ts",
    "license": "MIT",
    "author": {
      "name": "Luke Edwards",
      "email": "luke.edwards05@gmail.com",
      "url": "https://lukeed.com"
    },
    "engines": {
      "node": ">=8"
    },
    "scripts": {
      "build": "bundt",
      "pretest": "npm run build",
      "test": "tape -r esm test/*.js | tap-spec"
    },
    "files": [
      "*.d.ts",
      "dist"
    ],
    "keywords": [
      "id",
      "uid",
      "uuid",
      "random",
      "generate"
    ],
    "devDependencies": {
      "bundt": "1.0.0",
      "esm": "3.2.25",
      "tap-spec": "5.0.0",
      "tape": "4.9.1"
    },
    "_registry": "npm",
    "_loc": "/home/node/.cache/yarn/v6/npm-hexoid-1.0.0-ad10c6573fb907de23d9ec63a711267d9dc9bc18-integrity/node_modules/hexoid/package.json",
    "readmeFilename": "readme.md",
    "readme": "# hexoid [![build status](https://badgen.net/github/status/lukeed/hexoid)](https://github.com/lukeed/hexoid/actions) [![codecov](https://badgen.now.sh/codecov/c/github/lukeed/hexoid)](https://codecov.io/gh/lukeed/hexoid)\n\n> A tiny (190B) and [extremely fast](#benchmarks) utility to generate random IDs of fixed length\n\n_**Hexadecimal object IDs.** Available for Node.js and the browser._<br>Generate randomized output strings of fixed length using lowercased hexadecimal pairs.\n\n> **Notice:** Please note that this is not a cryptographically secure (CSPRNG) generator.\n\nAdditionally, this module is delivered as:\n\n* **CommonJS**: [`dist/index.js`](https://unpkg.com/hexoid/dist/index.js)\n* **ES Module**: [`dist/index.mjs`](https://unpkg.com/hexoid/dist/index.mjs)\n* **UMD**: [`dist/index.min.js`](https://unpkg.com/hexoid/dist/index.min.js)\n\n## Install\n\n```\n$ npm install --save hexoid\n```\n\n\n## Usage\n\n```js\nimport hexoid from 'hexoid';\n\nconst toID = hexoid();\n// length = 16 (default)\ntoID(); //=> '52032fedb951da00'\ntoID(); //=> '52032fedb951da01'\ntoID(); //=> '52032fedb951da02'\n\n// customize length\nhexoid(25)(); //=> '065359875047c63a037200e00'\nhexoid(32)(); //=> 'ca8e4aec7f139d94fcab9cab2eb89f00'\nhexoid(48)(); //=> 'c19a4deb5cdeca68534930e67bd0a2f4ed45988724d8d200'\n```\n\n\n## API\n\n### hexoid(length?)\nReturns: `() => string`\n\nCreates the function that will generate strings.\n\n#### length\nType: `Number`<br>\nDefault: `16`\n\nThen length of the output string.\n\n> **Important:** Your risk of collisions decreases with longer strings!<br>Please be aware of the [Birthday Problem](https://betterexplained.com/articles/understanding-the-birthday-paradox/)! You may need more combinations than you'd expect.\n\nThe **maximum combinations** are known given the following formula:\n\n```js\nconst combos = 256 ** (len/2);\n```\n\n\n## Benchmarks\n\n> Running on Node.js v10.13.0\n\n```\nValidation (length = 16):\n  ✔ hashids/fixed        (example: \"LkQWjnegYbwZ1p0G\")\n  ✔ nanoid/non-secure    (example: \"sLlVL5X3M5k2fo58\")\n  ✔ uid                  (example: \"3d0ckwcnjiuu91hj\")\n  ✔ hexoid               (example: \"de96b62e663ef300\")\nBenchmark (length = 16):\n  hashids/fixed        x     349,462 ops/sec ±0.28% (93 runs sampled)\n  nanoid/non-secure    x   3,337,573 ops/sec ±0.28% (96 runs sampled)\n  uid                  x   3,553,482 ops/sec ±0.51% (90 runs sampled)\n  hexoid               x  81,081,364 ops/sec ±0.18% (96 runs sampled)\n\n\nValidation (length = 25):\n  ✔ cuid                 (example: \"ck7lj5hbf00000v7c9gox6yfh\")\n  ✔ hashids/fixed        (example: \"r9JOyLkQWjnegYbwZ1p0GDXNm\")\n  ✔ nanoid/non-secure    (example: \"hI202PVPJQRNrP6o6z4pXz4m0\")\n  ✔ uid                  (example: \"9904e9w130buxaw7n8358mn2f\")\n  ✔ hexoid               (example: \"01dfab2c14e37768eb7605a00\")\nBenchmark (length = 25):\n  cuid                 x     161,636 ops/sec ±1.36% (89 runs sampled)\n  hashids/fixed        x     335,439 ops/sec ±2.40% (94 runs sampled)\n  nanoid/non-secure    x   2,254,073 ops/sec ±0.23% (96 runs sampled)\n  uid                  x   2,483,275 ops/sec ±0.38% (95 runs sampled)\n  hexoid               x  75,715,843 ops/sec ±0.27% (95 runs sampled)\n\n\nValidation (length = 36):\n  ✔ uuid/v1              (example: \"c3dc1ed0-629a-11ea-8bfb-8ffc49585f54\")\n  ✔ uuid/v4              (example: \"8c89f0ca-f01e-4c84-bd71-e645bab84552\")\n  ✔ hashids/fixed        (example: \"EVq3Pr9JOyLkQWjnegYbwZ1p0GDXNmRBlAxg\")\n  ✔ @lukeed/uuid         (example: \"069ad676-48f9-4452-b11d-f20c3872dc1f\")\n  ✔ nanoid/non-secure    (example: \"jAZjrcDmHH6P1rT9EFdCdHUpF440SjAKwb2A\")\n  ✔ uid                  (example: \"5mhi30lgy5d0glmuy81llelbzdko518ow1sx\")\n  ✔ hexoid               (example: \"615209331f0b4630acf69999ccfc95a23200\")\nBenchmark (length = 36):\n  uuid/v1              x   1,487,947 ops/sec ±0.18% (98 runs sampled)\n  uuid/v4              x     334,868 ops/sec ±1.08% (90 runs sampled)\n  @lukeed/uuid         x   6,352,445 ops/sec ±0.27% (91 runs sampled)\n  hashids/fixed        x     322,914 ops/sec ±0.27% (93 runs sampled)\n  nanoid/non-secure    x   1,592,708 ops/sec ±0.25% (91 runs sampled)\n  uid                  x   1,789,492 ops/sec ±0.29% (92 runs sampled)\n  hexoid               x  71,746,692 ops/sec ±0.29% (93 runs sampled)\n```\n\n## Related\n\n- [uid](https://github.com/lukeed/uid) - A smaller (134B) but slower variant of this module with a different API\n- [@lukeed/uuid](https://github.com/lukeed/uuid) - A tiny (230B), fast, and cryptographically secure UUID (V4) generator for Node and the browser\n\n\n## License\n\nMIT © [Luke Edwards](https://lukeed.com)\n",
    "licenseText": "MIT License\n\nCopyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/hexoid/-/hexoid-1.0.0.tgz#ad10c6573fb907de23d9ec63a711267d9dc9bc18",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/hexoid/-/hexoid-1.0.0.tgz",
    "hash": "ad10c6573fb907de23d9ec63a711267d9dc9bc18",
    "integrity": "sha512-QFLV0taWQOZtvIRIAdBChesmogZrtuXvVWsFHZTk2SU+anspqZ2vMnoLg7IE1+Uk16N19APic1BuF8bC8c2m5g==",
    "registry": "npm",
    "packageName": "hexoid",
    "cacheIntegrity": "sha512-QFLV0taWQOZtvIRIAdBChesmogZrtuXvVWsFHZTk2SU+anspqZ2vMnoLg7IE1+Uk16N19APic1BuF8bC8c2m5g== sha1-rRDGVz+5B94j2exjpxEmfZ3JvBg="
  },
  "registry": "npm",
  "hash": "ad10c6573fb907de23d9ec63a711267d9dc9bc18"
}