{
  "manifest": {
    "name": "node-abort-controller",
    "version": "3.1.1",
    "description": "AbortController for Node based on EventEmitter",
    "main": "index.js",
    "browser": "browser.js",
    "scripts": {
      "test": "jest"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/southpolesteve/node-abort-controller.git"
    },
    "keywords": [
      "AbortController",
      "AbortSignal",
      "fetch",
      "polyfill"
    ],
    "author": {
      "name": "Steve Faulkner",
      "email": "southpolesteve@gmail.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/southpolesteve/node-abort-controller/issues"
    },
    "homepage": "https://github.com/southpolesteve/node-abort-controller#readme",
    "devDependencies": {
      "jest": "^27.2.4",
      "node-fetch": "^2.6.5",
      "whatwg-fetch": "^3.6.2"
    },
    "jest": {
      "testEnvironment": "jsdom"
    },
    "_registry": "npm",
    "_loc": "/home/node/.cache/yarn/v6/npm-node-abort-controller-3.1.1-a94377e964a9a37ac3976d848cb5c765833b8548-integrity/node_modules/node-abort-controller/package.json",
    "readmeFilename": "README.md",
    "readme": "# node-abort-controller\n\nAbortController Polyfill for Node.JS based on EventEmitter for Node v14.6.x and below.\n\nAre you using Node 14.7.0 or above? You don't need this! [Node has `AbortController` and `AbortSignal` as builtin globals](https://nodejs.org/dist/latest/docs/api/globals.html#globals_class_abortcontroller). In Node versions >=14.7.0 and <15.4.0 you can access the experimental implementation using `--experimental-abortcontroller`.\n\n## Example Usage\n\n### Timing out `fetch`\n\n```javascript\nimport fetch from \"node-fetch\";\nimport { AbortController } from \"node-abort-controller\";\n\nconst controller = new AbortController();\nconst signal = controller.signal;\n\nawait fetch(\"https:/www.google.com\", { signal });\n\n// Abort fetch after 500ms. Effectively a timeout\nsetTimeout(() => controller.abort(), 500);\n```\n\n### Re-usable `fetch` function with a built in timeout\n\n```javascript\nimport { AbortController } from \"node-abort-controller\";\nimport fetch from \"node-fetch\";\n\nconst fetchWithTimeout = async (url = \"\") => {\n  const controller = new AbortController();\n  const { signal } = controller;\n\n  const timeout = setTimeout(() => {\n    controller.abort();\n  }, 5000);\n\n  const request = await fetch(url, { signal });\n\n  clearTimeout(timeout);\n\n  const result = await req.json();\n\n  return result;\n};\n```\n\n## Why would I need this?\n\nYou might not need to! Generally speaking, there are three environments your JavaScript code can run in:\n\n- Node\n- Modern Browsers (Not Internet Explorer)\n- Legacy Browsers (Mostly Internet Explorer)\n\nFor modern JS APIs, each environment would ideally get a polyfill:\n\n- only if it needs one\n- specific to the platform.\n\nIn practice, this is hard. Tooling such as webpack and browserify are great at making sure stuff works out of the box in all environments. But it is quite easy to fail on both points above. In all likelyhood, you end up shipping less than ideal polyfills on platforms that don't even need them. So what is a developer to do? In the case of `fetch` and `AbortController` I've done the work for you. This is a guide to that work.\n\nIf you are building a ...\n\n#### NodeJS library only supports Node 16 or above\n\nYou don't need this library! [`AbortController` is now built into nodeJS ](https://nodejs.org/api/globals.html#globals_class_abortcontroller). Use that instead.\n\n#### Web Application running only in modern browsers\n\nYou don't need a library! Close this tab. Uninstall this package.\n\n#### Web Application running in modern browsers AND NodeJS (such as a server side rendered JS app)\n\nUse _this package_ and [node-fetch](https://www.npmjs.com/package/node-fetch). It is minimally what you need.\n\n#### Web Application supporting legacy browsers AND NOT NodeJS\n\nUse [abort-controller](https://www.npmjs.com/package/abort-controller) and [whatwg-fetch](https://www.npmjs.com/package/whatwg-fetch). These are more complete polyfills that will work in all browser environments.\n\n#### Web Application supporting legacy browsers AND NodeJS\n\nUse [abort-controller](https://www.npmjs.com/package/abort-controller) and [cross-fetch](https://www.npmjs.com/package/cross-fetch). Same as above, except cross-fetch will polyfill correctly in both the browser and node.js\n\n#### NodeJS Library being consumed by other applications and using `fetch` internally\n\nUse _this package_ and [node-fetch](https://www.npmjs.com/package/node-fetch). It is the smallest and least opinionated combination for your end users. Application developers targeting Internet Exploer will need to polyfill `AbortController` and `fetch` on their own. But your library won't be forcing unecessary polyfills on developers who only target modern browsers.\n\n## Goals\n\nWith the above guide in mind, this library has a very specific set of goals:\n\n1. Provide a minimal polyfill in node.js\n2. Do not provide a polyfill in any browser environment\n\nThis is the ideal for _library authors_ who use `fetch` and `AbortController` internally and target _both_ browser and node developers.\n\n## Prior Art\n\nThank you @mysticatea for https://github.com/mysticatea/abort-controller. It is a fantastic `AbortController` polyfill and ideal for many use cases.\n",
    "licenseText": "MIT License\n\nCopyright (c) 2019 Steve Faulkner\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/node-abort-controller/-/node-abort-controller-3.1.1.tgz#a94377e964a9a37ac3976d848cb5c765833b8548",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/node-abort-controller/-/node-abort-controller-3.1.1.tgz",
    "hash": "a94377e964a9a37ac3976d848cb5c765833b8548",
    "integrity": "sha512-AGK2yQKIjRuqnc6VkX2Xj5d+QW8xZ87pa1UK6yA6ouUyuxfHuMP6umE5QK7UmTeOAymo+Zx1Fxiuw9rVx8taHQ==",
    "registry": "npm",
    "packageName": "node-abort-controller",
    "cacheIntegrity": "sha512-AGK2yQKIjRuqnc6VkX2Xj5d+QW8xZ87pa1UK6yA6ouUyuxfHuMP6umE5QK7UmTeOAymo+Zx1Fxiuw9rVx8taHQ== sha1-qUN36WSpo3rDl22EjLXHZYM7hUg="
  },
  "registry": "npm",
  "hash": "a94377e964a9a37ac3976d848cb5c765833b8548"
}