{
  "manifest": {
    "name": "node-emoji",
    "version": "1.11.0",
    "description": "simple emoji support for node.js projects",
    "author": {
      "name": "Daniel Bugl",
      "email": "daniel.bugl@touchlay.com"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/omnidan/node-emoji.git"
    },
    "keywords": [
      "emoji",
      "simple",
      "emoticons",
      "emoticon",
      "emojis",
      "smiley",
      "smileys",
      "smilies",
      "ideogram",
      "ideograms"
    ],
    "bugs": {
      "url": "https://github.com/omnidan/node-emoji/issues"
    },
    "dependencies": {
      "lodash": "^4.17.21"
    },
    "devDependencies": {
      "istanbul": "^0.4.5",
      "mocha": "^9.0.3",
      "should": "^13.2.3"
    },
    "scripts": {
      "coverage": "./node_modules/.bin/istanbul cover _mocha test",
      "emojiparse": "node lib/emojiparse.js",
      "test": "./node_modules/.bin/mocha --require should --bail --reporter spec test/*",
      "watch": "./node_modules/.bin/mocha --require should --bail --reporter spec test/* --watch",
      "prepublish": "npm run test"
    },
    "main": "index.js",
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/home/node/.cache/yarn/v6/npm-node-emoji-1.11.0-69a0150e6946e2f115e9d7ea4df7971e2628301c-integrity/node_modules/node-emoji/package.json",
    "readmeFilename": "README.md",
    "readme": "# node-emoji\n\n[![NPM version (1.0.3)](https://img.shields.io/npm/v/node-emoji.svg?style=flat-square)](https://www.npmjs.com/package/node-emoji) [![NPM Downloads](https://img.shields.io/npm/dm/node-emoji.svg?style=flat-square)](https://www.npmjs.com/package/node-emoji) [![Build Status](https://img.shields.io/travis/omnidan/node-emoji/master.svg?style=flat-square)](https://travis-ci.org/omnidan/node-emoji) [![Dependencies](https://img.shields.io/david/omnidan/node-emoji.svg?style=flat-square)](https://david-dm.org/omnidan/node-emoji) [![https://paypal.me/DanielBugl/9](https://img.shields.io/badge/donate-paypal-yellow.svg?style=flat-square)](https://paypal.me/DanielBugl/9)\n\n_simple emoji support for node.js projects_\n\n![node-emoji example](https://i.imgur.com/yIo5Uux.png)\n\n**Help wanted:** We are looking for volunteers to maintain this project, if you are interested, feel free to contact me at [me@omnidan.net](mailto:me@omnidan.net)\n\n## Installation\nTo install `node-emoji`, you need [node.js](http://nodejs.org/) and [npm](https://github.com/npm/npm#super-easy-install). :rocket:\n\nOnce you have that set-up, just run `npm install --save node-emoji` in your project directory. :ship:\n\nYou're now ready to use emoji in your node projects! Awesome! :metal:\n\n## Usage\n```javascript\nvar emoji = require('node-emoji')\nemoji.get('coffee') // returns the emoji code for coffee (displays emoji on terminals that support it)\nemoji.which(emoji.get('coffee')) // returns the string \"coffee\"\nemoji.get(':fast_forward:') // `.get` also supports github flavored markdown emoji (http://www.emoji-cheat-sheet.com/)\nemoji.emojify('I :heart: :coffee:!') // replaces all :emoji: with the actual emoji, in this case: returns \"I ‚ù§Ô∏è ‚òïÔ∏è!\"\nemoji.random() // returns a random emoji + key, e.g. `{ emoji: '‚ù§Ô∏è', key: 'heart' }`\nemoji.search('cof') // returns an array of objects with matching emoji's. `[{ emoji: '‚òïÔ∏è', key: 'coffee' }, { emoji: ‚ö∞', key: 'coffin'}]`\nemoji.unemojify('I ‚ù§Ô∏è üçï') // replaces the actual emoji with :emoji:, in this case: returns \"I :heart: :pizza:\"\nemoji.find('üçï') // Find the `pizza` emoji, and returns `({ emoji: 'üçï', key: 'pizza' })`;\nemoji.find('pizza') // Find the `pizza` emoji, and returns `({ emoji: 'üçï', key: 'pizza' })`;\nemoji.hasEmoji('üçï') // Validate if this library knows an emoji like `üçï`\nemoji.hasEmoji('pizza') // Validate if this library knowns a emoji with the name `pizza`\nemoji.strip('‚ö†Ô∏è „Ä∞Ô∏è „Ä∞Ô∏è low disk space') // Strips the string from emoji's, in this case returns: \"low disk space\".\nemoji.replace('‚ö†Ô∏è „Ä∞Ô∏è „Ä∞Ô∏è low disk space', (emoji) => `${emoji.key}:`) // Replace emoji's by callback method: \"warning: low disk space\"\n```\n\n## Options\n\n### onMissing\n`emoji.emojify(str, onMissing)`\n\nAs second argument, `emojify` takes an handler to parse unknown emojis. Provide a function to add your own handler:\n\n```js\nvar onMissing = function (name) {\n  return name;\n});\n\nvar emojified = emoji.emojify('I :unknown_emoji: :star: :another_one:', onMissing);\n// emojified: I unknown_emoji ‚≠êÔ∏è another_one\n```\n\n### format\n`emoji.emojify(str, onMissing, format)`\n\nAs third argument, `emojify` takes an handler to wrap parsed emojis. Provide a function to place emojis in custom elements, and to apply your custom styling:\n\n```js\nvar format = function (code, name) {\n  return '<img alt=\"' + code + '\" src=\"' + name + '.png\" />';\n});\n\nvar emojified = emoji.emojify('I :unknown_emoji: :star: :another_one:', null, format);\n// emojified: I <img alt=\"‚ù§Ô∏è\" src=\"heart.png\" /> <img alt=\"‚òïÔ∏è\" src=\"coffee.png\" />\n```\n\n## Adding new emoji\nEmoji come from js-emoji (Thanks a lot :thumbsup:). You can get a JSON file with all emoji here: https://raw.githubusercontent.com/omnidan/node-emoji/master/lib/emoji.json\n\nTo update the list or add custom emoji, clone this repository and put them into `lib/emojifile.js`.\nThen run `npm run-script emojiparse` in the project directory or `node emojiparse` in the lib directory.\nThis should generate the new emoji.json file and output `Done.`.\n\nThat's all, you now have more emoji you can use! :clap:\n\n## Support / Donations\nIf you want to support node-emoji development, please consider donating (it helps me keeping my projects active and alive!):\n\n * Paypal: [![daniel.bugl@gmail.com](https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=YBMS9EKTNPZHJ)\n * Bitcoin: [1J5eKsrAcPPLv5gPxSjSUkXnbJpkhndFgA](bitcoin:1J5eKsrAcPPLv5gPxSjSUkXnbJpkhndFgA)\n \n## Special Thanks\n\n... to Dan Perkins (@Aesth3tical) for sponsoring this project via [GitHub Sponsors](https://github.com/sponsors/omnidan)!\n\n## License\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fomnidan%2Fnode-emoji.svg?type=large)](https://app.fossa.io/projects/git%2Bgithub.com%2Fomnidan%2Fnode-emoji?ref=badge_large)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2014 Daniel Bugl\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/node-emoji/-/node-emoji-1.11.0.tgz#69a0150e6946e2f115e9d7ea4df7971e2628301c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/node-emoji/-/node-emoji-1.11.0.tgz",
    "hash": "69a0150e6946e2f115e9d7ea4df7971e2628301c",
    "integrity": "sha512-wo2DpQkQp7Sjm2A0cq+sN7EHKO6Sl0ctXeBdFZrL9T9+UywORbufTcTZxom8YqpLQt/FqNMUkOpkZrJVYSKD3A==",
    "registry": "npm",
    "packageName": "node-emoji",
    "cacheIntegrity": "sha512-wo2DpQkQp7Sjm2A0cq+sN7EHKO6Sl0ctXeBdFZrL9T9+UywORbufTcTZxom8YqpLQt/FqNMUkOpkZrJVYSKD3A== sha1-aaAVDmlG4vEV6dfqTfeXHiYoMBw="
  },
  "registry": "npm",
  "hash": "69a0150e6946e2f115e9d7ea4df7971e2628301c"
}