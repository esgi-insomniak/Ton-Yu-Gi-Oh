{
  "manifest": {
    "name": "rimraf",
    "version": "4.1.2",
    "main": "./dist/cjs/src/index-cjs.js",
    "module": "./dist/mjs/index.js",
    "bin": {
      "rimraf": "dist/cjs/src/bin.js"
    },
    "exports": {
      ".": {
        "import": {
          "types": "./dist/mjs/index.d.ts",
          "default": "./dist/mjs/index.js"
        },
        "require": {
          "types": "./dist/cjs/src/index-cjs.d.ts",
          "default": "./dist/cjs/src/index-cjs.js"
        }
      }
    },
    "files": [
      "dist"
    ],
    "description": "A deep deletion module for node (like `rm -rf`)",
    "author": {
      "name": "Isaac Z. Schlueter",
      "email": "i@izs.me",
      "url": "http://blog.izs.me/"
    },
    "license": "ISC",
    "repository": {
      "type": "git",
      "url": "git://github.com/isaacs/rimraf.git"
    },
    "scripts": {
      "preversion": "npm test",
      "postversion": "npm publish",
      "prepublishOnly": "git push origin --follow-tags",
      "preprepare": "rm -rf dist",
      "prepare": "tsc -p tsconfig.json && tsc -p tsconfig-esm.json",
      "postprepare": "bash fixup.sh",
      "pretest": "npm run prepare",
      "presnap": "npm run prepare",
      "test": "c8 tap",
      "snap": "c8 tap",
      "format": "prettier --write . --loglevel warn",
      "benchmark": "node benchmark/index.js",
      "typedoc": "typedoc --tsconfig tsconfig-esm.json ./src/*.ts"
    },
    "prettier": {
      "semi": false,
      "printWidth": 80,
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "jsxSingleQuote": false,
      "bracketSameLine": true,
      "arrowParens": "avoid",
      "endOfLine": "lf"
    },
    "devDependencies": {
      "@types/node": "^18.11.9",
      "@types/tap": "^15.0.7",
      "c8": "^7.12.0",
      "eslint-config-prettier": "^8.6.0",
      "mkdirp": "1",
      "prettier": "^2.8.2",
      "tap": "^16.3.3",
      "ts-node": "^10.9.1",
      "typedoc": "^0.23.21",
      "typescript": "^4.9.3"
    },
    "tap": {
      "coverage": false,
      "libtap-settings": "libtap-settings.js",
      "node-arg": [
        "--no-warnings",
        "--loader",
        "ts-node/esm"
      ],
      "ts": false
    },
    "funding": {
      "url": "https://github.com/sponsors/isaacs"
    },
    "engines": {
      "node": ">=14"
    },
    "_registry": "npm",
    "_loc": "/home/node/.cache/yarn/v6/npm-rimraf-4.1.2-20dfbc98083bdfaa28b01183162885ef213dbf7c-integrity/node_modules/rimraf/package.json",
    "readmeFilename": "README.md",
    "readme": "The [UNIX command](<http://en.wikipedia.org/wiki/Rm_(Unix)>) `rm -rf` for node.\n\nInstall with `npm install rimraf`.\n\n## Major Changes from v3 to v4\n\n- The function returns a `Promise` instead of taking a callback.\n- Built-in glob support removed.\n- Functions take arrays of paths, as well as a single path.\n- Native implementation used by default when available, except on\n  Windows, where this implementation is faster and more reliable.\n- New implementation on Windows, falling back to \"move then\n  remove\" strategy when exponential backoff for `EBUSY` fails to\n  resolve the situation.\n- Simplified implementation on Posix, since the Windows\n  affordances are not necessary there.\n\n## API\n\nHybrid module, load either with `import` or `require()`.\n\n```js\n// default export is the main rimraf function, or use named imports\nimport rimraf from 'rimraf'\n// or\nconst rimraf = require('rimraf')\n\n// other strategies exported as well\nimport { rimraf, rimrafSync, native, nativeSync } from 'rimraf'\n// or\nconst { rimraf, rimrafSync, native, nativeSync } = require('rimraf')\n```\n\n### `rimraf(f, [opts]) -> Promise`\n\nThis first parameter is a path or array of paths. The second\nargument is an options object.\n\nOptions:\n\n- `preserveRoot`: If set to boolean `false`, then allow the\n  recursive removal of the root directory. Otherwise, this is\n  not allowed.\n- `tmp`: Windows only. Temp folder to use to place files and\n  folders for the \"move then remove\" fallback. Must be on the\n  same physical device as the path being deleted. Defaults to\n  `os.tmpdir()` when that is on the same drive letter as the path\n  being deleted, or `${drive}:\\temp` if present, or `${drive}:\\`\n  if not.\n- `maxRetries`: Windows and Native only. Maximum number of\n  retry attempts in case of `EBUSY`, `EMFILE`, and `ENFILE`\n  errors. Default `10` for Windows implementation, `0` for Native\n  implementation.\n- `backoff`: Windows only. Rate of exponential backoff for async\n  removal in case of `EBUSY`, `EMFILE`, and `ENFILE` errors.\n  Should be a number greater than 1. Default `1.2`\n- `maxBackoff`: Windows only. Maximum total backoff time in ms to\n  attempt asynchronous retries in case of `EBUSY`, `EMFILE`, and\n  `ENFILE` errors. Default `200`. With the default `1.2` backoff\n  rate, this results in 14 retries, with the final retry being\n  delayed 33ms.\n- `retryDelay`: Native only. Time to wait between retries, using\n  linear backoff. Default `100`.\n\nAny other options are provided to the native Node.js `fs.rm` implementation\nwhen that is used.\n\nThis will attempt to choose the best implementation, based on Node.js\nversion and `process.platform`. To force a specific implementation, use\none of the other functions provided.\n\n### `rimraf.sync(f, [opts])` `rimraf.rimrafSync(f, [opts])`\n\nSynchronous form of `rimraf()`\n\nNote that, unlike many file system operations, the synchronous form will\ntypically be significantly _slower_ than the async form, because recursive\ndeletion is extremely parallelizable.\n\n### `rimraf.native(f, [opts])`\n\nUses the built-in `fs.rm` implementation that Node.js provides. This is\nused by default on Node.js versions greater than or equal to `14.14.0`.\n\n### `rimraf.nativeSync(f, [opts])` `rimraf.native.sync(f, [opts])`\n\nSynchronous form of `rimraf.native`\n\n### `rimraf.manual(f, [opts])`\n\nUse the JavaScript implementation appropriate for your operating system.\n\n### `rimraf.manualSync(f, [opts])` `rimraf.manualSync(f, opts)`\n\nSynchronous form of `rimraf.manual()`\n\n### `rimraf.windows(f, [opts])`\n\nJavaScript implementation of file removal appropriate for Windows\nplatforms. Works around `unlink` and `rmdir` not being atomic\noperations, and `EPERM` when deleting files with certain\npermission modes.\n\nFirst deletes all non-directory files within the tree, and then\nremoves all directories, which should ideally be empty by that\ntime. When an `ENOTEMPTY` is raised in the second pass, falls\nback to the `rimraf.moveRemove` strategy as needed.\n\n### `rimraf.windows.sync(path, [opts])` `rimraf.windowsSync(path, [opts])`\n\nSynchronous form of `rimraf.windows()`\n\n### `rimraf.moveRemove(path, [opts])`\n\nMoves all files and folders to the parent directory of `path`\nwith a temporary filename prior to attempting to remove them.\n\nNote that, in cases where the operation fails, this _may_ leave\nfiles lying around in the parent directory with names like\n`.file-basename.txt.0.123412341`. Until the Windows kernel\nprovides a way to perform atomic `unlink` and `rmdir` operations,\nthis is unfortunately unavoidable.\n\nTo move files to a different temporary directory other than the\nparent, provide `opts.tmp`. Note that this _must_ be on the same\nphysical device as the folder being deleted, or else the\noperation will fail.\n\nThis is the slowest strategy, but most reliable on Windows\nplatforms. Used as a last-ditch fallback by `rimraf.windows()`.\n\n### `rimraf.moveRemove.sync(path, [opts])` `rimraf.moveRemoveSync(path, [opts])`\n\nSynchronous form of `rimraf.moveRemove()`\n\n### Command Line Interface\n\n```\nrimraf version 4.0.4\n\nUsage: rimraf <path> [<path> ...]\nDeletes all files and folders at \"path\", recursively.\n\nOptions:\n  --                  Treat all subsequent arguments as paths\n  -h --help           Display this usage info\n  --preserve-root     Do not remove '/' recursively (default)\n  --no-preserve-root  Do not treat '/' specially\n\n  --impl=<type>       Specify the implementationt to use.\n                      rimraf: choose the best option\n                      native: the built-in implementation in Node.js\n                      manual: the platform-specific JS implementation\n                      posix: the Posix JS implementation\n                      windows: the Windows JS implementation\n                      move-remove: a slower Windows JS fallback implementation\n\nImplementation-specific options:\n  --tmp=<path>        Folder to hold temp files for 'move-remove' implementation\n  --max-retries=<n>   maxRetries for the 'native' and 'windows' implementations\n  --retry-delay=<n>   retryDelay for the 'native' implementation, default 100\n  --backoff=<n>       Exponential backoff factor for retries (default: 1.2)\n```\n\n## mkdirp\n\nIf you need to _create_ a directory recursively, check out\n[mkdirp](https://github.com/isaacs/node-mkdirp).\n",
    "licenseText": "The ISC License\n\nCopyright (c) 2011-2023 Isaac Z. Schlueter and Contributors\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/rimraf/-/rimraf-4.1.2.tgz#20dfbc98083bdfaa28b01183162885ef213dbf7c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/rimraf/-/rimraf-4.1.2.tgz",
    "hash": "20dfbc98083bdfaa28b01183162885ef213dbf7c",
    "integrity": "sha512-BlIbgFryTbw3Dz6hyoWFhKk+unCcHMSkZGrTFVAx2WmttdBSonsdtRlwiuTbDqTKr+UlXIUqJVS4QT5tUzGENQ==",
    "registry": "npm",
    "packageName": "rimraf",
    "cacheIntegrity": "sha512-BlIbgFryTbw3Dz6hyoWFhKk+unCcHMSkZGrTFVAx2WmttdBSonsdtRlwiuTbDqTKr+UlXIUqJVS4QT5tUzGENQ== sha1-IN+8mAg736oosBGDFiiF7yE9v3w="
  },
  "registry": "npm",
  "hash": "20dfbc98083bdfaa28b01183162885ef213dbf7c"
}