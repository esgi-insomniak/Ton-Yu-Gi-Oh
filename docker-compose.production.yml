version: "3.4"
services:
    gateway:
      build:
        context: ./server/gateway
        dockerfile: Dockerfile
        target: prod
      hostname: gateway
      command: node dist/main.js
      env_file:
        - .env
      depends_on:
        - card-service-node
        - user-service-node
      volumes:
        - ./server/gateway:/usr/src/app
      ports:
        - ${API_GATEWAY_PORT}:${API_GATEWAY_PORT}
      networks:
        - backend-prod
        - frontend-prod
    card-service-node:
      build:
        context: ./server/card-service
        dockerfile: Dockerfile
        target: prod
      hostname: card-service-node
      command: >
        sh -c "yarn typeorm:migrate &&
        node dist/main.js"
      networks:
        - backend-prod
      env_file:
        - .env
      depends_on:
        - card-service-postgres
      volumes:
        - ./server/card-service:/usr/src/app
      links:
        - card-service-postgres
    card-service-postgres:
      image: postgres:13.2-alpine
      hostname: card-service-postgres
      networks:
        - backend-prod
      env_file:
        - .env
      environment:
        - POSTGRES_USER=${CARD_SERVICE_POSTGRES_USER}
        - POSTGRES_PASSWORD=${CARD_SERVICE_POSTGRES_PASSWORD}
        - POSTGRES_DB=${CARD_SERVICE_POSTGRES_DB}
      volumes:
        - card-service-postgres-prod:/var/lib/postgresql/data
    user-service-node:
      build:
        context: ./server/user-service
        dockerfile: Dockerfile
        target: prod
      hostname: user-service-node
      command: >
        sh -c "yarn typeorm:migrate &&
        node dist/main.js"
      networks:
        - backend-prod
      env_file:
        - .env
      depends_on:
        - user-service-postgres
      volumes:
        - ./server/user-service:/usr/src/app
      links:
        - user-service-postgres
    user-service-postgres:
      image: postgres:13.2-alpine
      hostname: user-service-postgres
      networks:
        - backend-prod
      env_file:
        - .env
      environment:
        - POSTGRES_USER=${USER_SERVICE_POSTGRES_USER}
        - POSTGRES_PASSWORD=${USER_SERVICE_POSTGRES_PASSWORD}
        - POSTGRES_DB=${USER_SERVICE_POSTGRES_DB}
      volumes:
        - user-service-postgres-prod:/var/lib/postgresql/data
networks:
  backend-prod:
    driver: bridge
  frontend-prod:
    external:
      name: infrastructure

volumes:
    card-service-postgres-prod:
    user-service-postgres-prod: